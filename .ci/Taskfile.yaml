version: '3'

dotenv: [.env]

tasks:
  env:
    desc: makes .env from .env.example
    cmds:
      - cp .env.example .env
      - cp .env.example ../frontend/.env.production.local
      - cp .env.example ../backend/.env.production.local

  init:
    desc: pulls all docker images
    cmds:
      - docker pull $PLAYWRIGHT_IMAGE
      - docker pull $NODE_IMAGE

  yarn:
    desc: installs 'node_modules'
    cmds:
      - task frontend:yarn
      - task backend:yarn

  up:
    desc: start services
    cmds:
      - docker compose up -d

  down:
    desc: stops services
    cmds:
      - docker compose down

    # ROOT
  root:
    desc: launch node with mounted root directory
    cmds:
      - |
        docker run \
          -it --rm \
          -w /app \
          -v $(pwd)/..:/app \
          $NODE_IMAGE /bin/bash

  root:yarn:
    desc: runs 'yarn' in root directory
    cmds:
      - |
        docker run \
          --rm \
          -w /app \
          -v $(pwd)/..:/app \
          $NODE_IMAGE /bin/bash -c "yarn {{.CLI_ARGS }}"

  root:lint:
    desc: runs 'lint' in root directory
    cmds:
      - |
        docker run \
          --rm \
          -w /app \
          -v $(pwd)/..:/app \
          $NODE_IMAGE /bin/bash -c "yarn lint"

  # FRONTEND
  frontend:yarn:
    desc: runs 'yarn' in 'frontend' directory
    cmds:
      - |
        docker run \
          --rm \
          -w /app \
          -v $(pwd)/../frontend:/app \
          $NODE_IMAGE yarn

  frontend:build:
    cmds:
      - |
        docker run \
          -w /app/frontend \
          -v $(pwd)/../.common:/app/.common \
          -v $(pwd)/../frontend:/app/frontend \
          $NODE_IMAGE /bin/bash -c "{{.CLI_ARGS }} yarn build"

  frontend:deploy:
    desc: deploy to CloudFlare Pages
    cmds:
      - |
        docker run \
        --rm \
        -w /app \
        -v $(pwd)/../frontend:/app \
        -e CLOUDFLARE_ACCOUNT_ID \
        -e CLOUDFLARE_API_TOKEN \
        $NODE_IMAGE yarn deploy

  # BACKEND
  backend:yarn:
    desc: runs 'yarn' in 'backend' directory
    cmds:
      - |
        docker run \
          --rm \
          -w /app \
          -v $(pwd)/../backend:/app \
          $NODE_IMAGE yarn

  backend:deploy:
    desc: deploy to CloudFlare Workers
    cmds:
      - |
        docker run \
        --rm \
        -w /app \
        -v $(pwd)/../backend:/app \
        -e CLOUDFLARE_ACCOUNT_ID \
        -e CLOUDFLARE_API_TOKEN \
        $NODE_IMAGE yarn deploy

  # TEST
  test:
    desc: runs Playwright
    cmds:
      - |
        docker run \
          --rm --network="host" \
          -v $(pwd)/../frontend:/app \
          -w /app \
          $PLAYWRIGHT_IMAGE \
          yarn test:e2e
